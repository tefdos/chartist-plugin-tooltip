{"version":3,"sources":["chartist-plugin-tooltip.js"],"names":["root","factory","define","amd","Chartist","returnExportsGlobal","exports","module","require","this","window","document","show","element","hasClass","className","hide","regex","RegExp","replace","trim","getAttribute","indexOf","next","nextSibling","text","innerText","textContent","defaultOptions","currency","undefined","tooltipOffset","x","y","appendToBody","class","pointClass","fixedForBar","plugins","tooltip","options","extend","chart","on","event","selector","callback","$chart","addEventListener","e","target","setPosition","height","$toolTip","offsetHeight","width","offsetWidth","offsetX","offsetY","style","top","pageY","left","pageX","box","getBoundingClientRect","pageXOffset","pageYOffset","tooltipSelector","Bar","Pie","donut","container","querySelector","createElement","body","appendChild","$point","tooltipText","isPieChart","parentNode","seriesName","meta","hasMeta","value","transformTooltipTextFnc","tooltipFnc","metaIsHTML","txt","innerHTML","label","tooltips"],"mappings":";;;;;;CAAC,SAAUA,EAAMC,GACO,kBAAXC,SAAyBA,OAAOC,IAEzCD,QAAQ,YAAa,SAAUE,GAC7B,MAAQJ,GAAKK,oBAAsBJ,EAAQG,KAEjB,gBAAZE,SAIhBC,OAAOD,QAAUL,EAAQO,QAAQ,aAEjCR,EAAK,6BAA+BC,EAAQG,WAE9CK,KAAM,SAAUL,GAwLhB,MAjLC,UAAUM,EAAQC,EAAUP,GAC3B,YAoJA,SAASQ,GAAKC,GACRC,EAASD,EAAS,kBACpBA,EAAQE,UAAYF,EAAQE,UAAY,iBAI5C,QAASC,GAAKH,GACZ,GAAII,GAAQ,GAAIC,QAAO,mBAAyB,KAChDL,GAAQE,UAAYF,EAAQE,UAAUI,QAAQF,EAAO,IAAIG,OAG3D,QAASN,GAASD,EAASE,GACzB,OAAQ,IAAMF,EAAQQ,aAAa,SAAW,KAAKC,QAAQ,IAAMP,EAAY,KAAO,GAGtF,QAASQ,GAAKV,EAASE,GACrB,EACEF,GAAUA,EAAQW,kBACXX,IAAYC,EAASD,EAASE,GACvC,OAAOF,GAGT,QAASY,GAAKZ,GACZ,MAAOA,GAAQa,WAAab,EAAQc,YAzKtC,GAAIC,IACFC,SAAUC,OACVC,eACEC,EAAG,EACHC,EAAG,KAELC,cAAc,EACdC,QAAOL,OACPM,WAAY,WACZC,aAAa,EAGfjC,GAASkC,QAAUlC,EAASkC,YAC5BlC,EAASkC,QAAQC,QAAU,SAAUC,GAGnC,MAFAA,GAAUpC,EAASqC,UAAWb,EAAgBY,GAEvC,SAAiBE,GA6BtB,QAASC,GAAGC,EAAOC,EAAUC,GAC3BC,EAAOC,iBAAiBJ,EAAO,SAAUK,GAClCJ,IAAY/B,EAASmC,EAAEC,OAAQL,IAClCC,EAASG,KAsEf,QAASE,GAAYP,GACnBQ,EAASA,GAAUC,EAASC,aAC5BC,EAAQA,GAASF,EAASG,WAC1B,IAAIC,IAAYF,EAAQ,EAAIf,EAAQT,cAAcC,EAC9C0B,GAAYN,EAASZ,EAAQT,cAAcE,CAE/C,IAAKO,EAAQN,aAeXmB,EAASM,MAAMC,IAAMhB,EAAMiB,MAAQH,EAAU,KAC7CL,EAASM,MAAMG,KAAOlB,EAAMmB,MAAQN,EAAU,SAhBrB,CACzB,GAAIO,GAAMjB,EAAOkB,wBACbH,EAAOlB,EAAMmB,MAAQC,EAAIF,KAAOpD,EAAOwD,WAE3C,IAAG1B,EAAQH,YACT,GAAIuB,GAAMhB,EAAMM,OAAO7B,aAAa,MAAQ+B,EAASZ,EAAQT,cAAcE,MAG3E,IAAI2B,GAAMhB,EAAMiB,MAAQG,EAAIJ,IAAMlD,EAAOyD,WAG3Cd,GAASM,MAAMC,IAAMA,EAAMF,EAAU,KACrCL,EAASM,MAAMG,KAAOA,EAAOL,EAAU,MAvH3C,GAAIW,GAAkB5B,EAAQJ,UAC1BM,aAAiBtC,GAASiE,IAC5BD,EAAkB,SACT1B,YAAiBtC,GAASkE,MAGjCF,EADE1B,EAAMF,QAAQ+B,MACE,iBAEA,eAItB,IAAIxB,GAASL,EAAM8B,UACfnB,EAAWN,EAAO0B,cAAc,oBAC/BpB,KACHA,EAAW1C,EAAS+D,cAAc,OAClCrB,EAAStC,UAAcyB,EAAAA,SAAsC,oBAAsBA,EAAAA,SAA3C,mBACnCA,EAAQN,aAGXvB,EAASgE,KAAKC,YAAYvB,GAF1BN,EAAO6B,YAAYvB,GAKvB,IAAID,GAASC,EAASC,aAClBC,EAAQF,EAASG,WAErBxC,GAAKqC,GASLV,EAAG,YAAayB,EAAiB,SAAUxB,GACzC,GAAIiC,GAASjC,EAAMM,OACf4B,EAAc,GAEdC,EAAcrC,YAAiBtC,GAASkE,IAAOO,EAASA,EAAOG,WAC/DC,EAAa,EAAeJ,EAAOG,WAAW3D,aAAa,YAAcwD,EAAOG,WAAW3D,aAAa,kBAAoB,GAC5H6D,EAAOL,EAAOxD,aAAa,YAAc4D,GAAc,GACvDE,IAAYD,EACZE,EAAQP,EAAOxD,aAAa,WAMhC,IAJImB,EAAQ6C,yBAAsE,kBAApC7C,GAAQ6C,0BACpDD,EAAQ5C,EAAQ6C,wBAAwBD,IAGtC5C,EAAQ8C,YAA4C,kBAAvB9C,GAAQ8C,WACvCR,EAActC,EAAQ8C,WAAWJ,EAAME,OAClC,CACL,GAAI5C,EAAQ+C,WAAY,CACtB,GAAIC,GAAM7E,EAAS+D,cAAc,WACjCc,GAAIC,UAAYP,EAChBA,EAAOM,EAAIJ,MAKb,GAFAF,EAAO,uCAAyCA,EAAO,UAEnDC,EACFL,GAAeI,EAAO,WAItB,IAAIxC,YAAiBtC,GAASkE,IAAK,CACjC,GAAIoB,GAAQnE,EAAKsD,EAAQ,WACrBa,KACFZ,GAAerD,EAAKiE,GAAS,QAK/BN,IACE5C,EAAQX,WACVuD,EAAQ5C,EAAQX,SAAWuD,EAAMjE,QAAQ,+BAAgC,QAE3EiE,EAAQ,wCAA0CA,EAAQ,UAC1DN,GAAeM,GAIhBN,IACDzB,EAASoC,UAAYX,EACrB3B,EAAYP,GACZhC,EAAKyC,GAGLD,EAASC,EAASC,aAClBC,EAAQF,EAASG,eAIrBb,EAAG,WAAYyB,EAAiB,WAC9BpD,EAAKqC,KAGPV,EAAG,YAAa,KAAM,SAAUC,EAAOC,GACrCM,EAAYP,QAyDjBlC,OAAQC,SAAUP,GAEdA,EAASkC,QAAQqD","file":"chartist-plugin-tooltip.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"chartist\"], function (Chartist) {\n      return (root.returnExportsGlobal = factory(Chartist));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.tooltips'] = factory(Chartist);\n  }\n}(this, function (Chartist) {\n\n  /**\n   * Chartist.js plugin to display a data label on top of the points in a line chart.\n   *\n   */\n  /* global Chartist */\n  (function (window, document, Chartist) {\n    'use strict';\n\n    var defaultOptions = {\n      currency: undefined,\n      tooltipOffset: {\n        x: 0,\n        y: -20\n      },\n      appendToBody: false,\n      class: undefined,\n      pointClass: 'ct-point',\n      fixedForBar: false\n    };\n\n    Chartist.plugins = Chartist.plugins || {};\n    Chartist.plugins.tooltip = function (options) {\n      options = Chartist.extend({}, defaultOptions, options);\n\n      return function tooltip(chart) {\n        var tooltipSelector = options.pointClass;\n        if (chart instanceof Chartist.Bar) {\n          tooltipSelector = 'ct-bar';\n        } else if (chart instanceof Chartist.Pie) {\n          // Added support for donut graph\n          if (chart.options.donut) {\n            tooltipSelector = 'ct-slice-donut';\n          } else {\n            tooltipSelector = 'ct-slice-pie';\n          }\n        }\n\n        var $chart = chart.container;\n        var $toolTip = $chart.querySelector('.chartist-tooltip');\n        if (!$toolTip) {\n          $toolTip = document.createElement('div');\n          $toolTip.className = (!options.class) ? 'chartist-tooltip' : 'chartist-tooltip ' + options.class;\n          if (!options.appendToBody) {\n            $chart.appendChild($toolTip);\n          } else {\n            document.body.appendChild($toolTip);\n          }\n        }\n        var height = $toolTip.offsetHeight;\n        var width = $toolTip.offsetWidth;\n\n        hide($toolTip);\n\n        function on(event, selector, callback) {\n          $chart.addEventListener(event, function (e) {\n            if (!selector || hasClass(e.target, selector))\n              callback(e);\n          });\n        }\n\n        on('mouseover', tooltipSelector, function (event) {\n          var $point = event.target;\n          var tooltipText = '';\n\n          var isPieChart = (chart instanceof Chartist.Pie) ? $point : $point.parentNode;\n          var seriesName = (isPieChart) ? $point.parentNode.getAttribute('ct:meta') || $point.parentNode.getAttribute('ct:series-name') : '';\n          var meta = $point.getAttribute('ct:meta') || seriesName || '';\n          var hasMeta = !!meta;\n          var value = $point.getAttribute('ct:value');\n\n          if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\n            value = options.transformTooltipTextFnc(value);\n          }\n\n          if (options.tooltipFnc && typeof options.tooltipFnc === 'function') {\n            tooltipText = options.tooltipFnc(meta, value);\n          } else {\n            if (options.metaIsHTML) {\n              var txt = document.createElement(\"textarea\");\n              txt.innerHTML = meta;\n              meta = txt.value;\n            }\n\n            meta = '<span class=\"chartist-tooltip-meta\">' + meta + '</span>';\n\n            if (hasMeta) {\n              tooltipText += meta + '<br>';\n            } else {\n              // For Pie Charts also take the labels into account\n              // Could add support for more charts here as well!\n              if (chart instanceof Chartist.Pie) {\n                var label = next($point, 'ct-label');\n                if (label) {\n                  tooltipText += text(label) + '<br>';\n                }\n              }\n            }\n\n            if (value) {\n              if (options.currency) {\n                value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\n              }\n              value = '<span class=\"chartist-tooltip-value\">' + value + '</span>';\n              tooltipText += value;\n            }\n          }\n\n          if(tooltipText) {\n            $toolTip.innerHTML = tooltipText;\n            setPosition(event);\n            show($toolTip);\n\n            // Remember height and width to avoid wrong position in IE\n            height = $toolTip.offsetHeight;\n            width = $toolTip.offsetWidth;\n          }\n        });\n\n        on('mouseout', tooltipSelector, function () {\n          hide($toolTip);\n        });\n\n        on('mousemove', null, function (event, selector) {\n          setPosition(event);\n        });\n\n        function setPosition(event) {\n          height = height || $toolTip.offsetHeight;\n          width = width || $toolTip.offsetWidth;\n          var offsetX = - width / 2 + options.tooltipOffset.x;\n          var offsetY = - height + options.tooltipOffset.y;\n\n          if (!options.appendToBody) {\n            var box = $chart.getBoundingClientRect();\n            var left = event.pageX - box.left - window.pageXOffset ;\n\n            if(options.fixedForBar){\n              var top = event.target.getAttribute('y2') - height + options.tooltipOffset.y;\n            }\n            else{\n              var top = event.pageY - box.top - window.pageYOffset ;\n            }\n\n            $toolTip.style.top = top + offsetY + 'px';\n            $toolTip.style.left = left + offsetX + 'px';\n\n          } else {\n            $toolTip.style.top = event.pageY + offsetY + 'px';\n            $toolTip.style.left = event.pageX + offsetX + 'px';\n          }\n        }\n      }\n    };\n\n    function show(element) {\n      if(!hasClass(element, 'tooltip-show')) {\n        element.className = element.className + ' tooltip-show';\n      }\n    }\n\n    function hide(element) {\n      var regex = new RegExp('tooltip-show' + '\\\\s*', 'gi');\n      element.className = element.className.replace(regex, '').trim();\n    }\n\n    function hasClass(element, className) {\n      return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\n    }\n\n    function next(element, className) {\n      do {\n        element = element.nextSibling;\n      } while (element && !hasClass(element, className));\n      return element;\n    }\n\n    function text(element) {\n      return element.innerText || element.textContent;\n    }\n\n  } (window, document, Chartist));\n\n  return Chartist.plugins.tooltips;\n\n}));\n"]}